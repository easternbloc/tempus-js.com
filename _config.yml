permalink: /blog/:title
pygments: true
exclude:
  - README.md
  - config.rb
  - .sass-cache

github_url: http://github.com/keithamus/Tempus

disqus_shortname: tempus

authors:
  keithamus: 
      name: Keith Cirkel
      description: |
        JavaScript developer, creator of Tempus, as well as other libraries,
        such as <a href="http://keithcirkel.co.uk/jwerty/">jwerty</a>, and 
        <a href="http://keithcirkel.co.uk/R.js/">R.js</a>.
      github: keithamus
      twitter: keithamus
      linkedin: http://www.linkedin.com/in/keithcirkel

api_version: 0.2
api:
  - title: Top Level
    functions: 

      - title: Tempus
        description: 'Accepts a date, and returns that date as a Tempus object'
        category: core
        tags:
          - v0.1
        signatures:
          - signature: '[ new ]Tempus( )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date set to the current date & time

          - signature: '[ new ]Tempus( int_timestamp )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date as 
              <var>int_timestamp</var> seconds from the Epoch 
              (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '[ new ]Tempus( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date values from the 
              <var>arguments</var>.

          - signature: '[ new ]Tempus( tempus_or_date_object )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object, cloning the date values from 
              <var>tempus_or_date_object</var>

          - signature: '[ new ]Tempus( date_string [, formatter_string ] )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object from a recognisable 
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '[ new ]Tempus( date_string, array_of_formatter_strings )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object by running 
              <var>date_string</var> through 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '[ new ]Tempus( array_of_arguments )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object, extrapolating 
              <var>array_of_arguments</var> into a set of arguments, 
              similar to the above signatures

      - title: now
        description: 'Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)'
        category: core
        tags:
          - v0.1
        signatures:
          - signature: 'Tempus.now( )'
            returns: Number
            version: 0.1
            description: |
              Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)


      - title: addParser
        description: 'Adds a parser function to the <a href="/api/set/">set</a> method'
        tags:
          - v0.1
        category: extending
        signatures:
          - signature: 'Tempus.addParser( testerFn , parserFn [, argumentLength], arg1Type [, arg2Type [, ... argNType ] ] )'
            version: 0.1
            description: |
              Adds a parser to the <a href="/api/set/">set</a>, which when all 
              of the <var>argNType</var> arguments match the arguments 
              called from set, and <var>testerFn</var> passes, 
              <var>parserFn</var> will run.


  - title: Utility
    functions: 

      - title: realTypeOf
        description: "Returns the type of an object, more precise than 'typeof'"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.realTypeOf( mixed_variable )'
            returns: string
            version: 0.1
            description: |
                Returns the real type of <var>mixed_variable</var>, as 
                a lower case string, for example 'object', 'array', 'regexp'

      - title: arrIndexOf
        description: "Returns the index of which a variable appears in an array"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.arrIndexOf( array_haystack, mixed_needle )'
            returns: number
            version: 0.1
            description: |
                Returns the index at which <var>mixed_needle</var> 
                appears in <var>array_haystack</var>. If 
                <var>mixed_needle</var> is not found, <strong>-1</strong>
                is returned

      - title: getOrdinal
        description: "Returns the ordinal suffix of a given number"
        tags:
          - v0.1
          - i18n
        category: util
        signatures:
          - signature: 'Tempus.util.getOrdinal( number )'
            returns: string
            version: 0.1
            description: |
                Returns the ordinal suffix of <var>number</var>, for example, if 
                <var>number</var> is 1, the string returned is 'st'.

      - title: stringPad
        description: "Returns a string padded with extra leading characters"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.stringPad( the_string, number_width [, padString ] )'
            returns: string
            version: 0.1
            description: |
                Returns <var>the_string</var>, padding to the left with the 
                <var>padString</var> character until <var>the_string</var> is 
                <var>number_width</var> long. If not supplied, <var>padString</var>
                is '0'.

  - title: Instance Core
    functions: 

      - title: set
        description: Sets the Tempus instances' date to the arguments passed
        tags:
          - v0.1
        category: core
        signatures:
          - signature: '.set( )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date set to the current date & time. This is the 
              same as using <code>.set( Tempus.now() )</code>

          - signature: '.set( int_timestamp )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date as <var>int_timestamp</var> seconds 
              from the Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.set( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: this
            version: 0.1
            description: |
              Set the Tempus date to values from the <var>arguments</var>.

          - signature: '.set( tempus_or_date_object )'
            returns: this
            version: 0.1
            description: |
              Clones the date values from <var>tempus_or_date_object</var>

          - signature: '.set( date_string [, formatter_string ] )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date to a recognisable 
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '.set( date_string, array_of_formatter_strings )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date to a recognisable date by running 
              <var>date_string</var> through 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '.set( array_of_arguments )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus object to a date, extrapolating 
              <var>array_of_arguments</var> into a set of arguments, 
              similar to the above signatures

      - title: clone
        description: Creates a new version of the Tempus object
        tags:
          - v0.1
        category: core
        signatures:
          - signature: '.clone( )'
            returns: this
            version: 0.1
            description: |
              Return a new copy of the Tempus object, that can be modified 
              without affecting the original

      - title: copy
        description: Copies the date information from the Tempus object provided
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.copy( tempus_object )'
            returns: this
            version: 0.1
            description: |
              Copies all of the date information from <var>tempus_object</var> 
              into this current instance.

      - title: timeStamp
        description: Get or set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timeStamp( )'
            returns: number
            version: 0.1
            description: |
              Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.timeStamp( number_of_seconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_seconds_since_epoch</var>

      - title: getTimeStamp
        description: Get the number of seconds since Epoch
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimeStamp( )'
            returns: number
            version: 0.1
            description: |
              Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

      - title: setTimeStamp
        description: Set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimeStamp( number_of_seconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_seconds_since_epoch</var>

      - title: addTimeStamp
        description: Add a number of seconds to the total seconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addTimeStamp( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_of_seconds</var> to the number of seconds since 
              epoch, changing the date. Similar to 
              <a href="/api/addSeconds">addSeconds</a>

      - title: subTimeStamp
        description: Subtract a number of seconds to the total seconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subTimeStamp( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_of_seconds</var> to the number of seconds 
              since epoch, changing the date. Similar to 
              <a href="/api/subSeconds">subSeconds</a>

      - title: time
        description: Get or set the number of milliseconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.time( )'
            returns: number
            version: 0.1
            description: |
              Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.time( number_of_milliseconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_milliseconds_since_epoch</var>

      - title: getTime
        description: Get the number of seconds since Epoch
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTime( )'
            returns: number
            version: 0.1
            description: |
              Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

      - title: setTime
        description: Set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTime( number_of_milliseconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_milliseconds_since_epoch</var>

      - title: addTime
        description: Add a number of milliseconds to the total milliseconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addTime( number_of_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_of_milliseconds</var> to the number of 
              milliseconds since epoch, changing the date. Similar to 
              <a href="/api/addSeconds">addMilliSeconds</a>

      - title: subTime
        description: Subtract a number of milliseconds to the total milliseconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subTime( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_of_milliseconds</var> to the number of 
              milliseconds since epoch, changing the date. Similar to 
              <a href="/api/subSeconds">subMilliSeconds</a>

  - title: Instance Timezone
    functions: 

      - title: timezone
        description: "Gets or sets the timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+0100'

          - signature: '.timezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.timezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: getTimezone
        description: "Gets timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+0100'

      - title: setTimezone
        description: "Sets the timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.setTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: ISOTimezone
        description: "Gets or sets the timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ISOTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+01:00'. Note the
              colon to delimit hours and minutes. If you don't want this, use
              <a href="/api/timezone">timezone</a>

          - signature: '.ISOTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.ISOTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: getISOTimezone
        description: "Gets timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getISOTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+01:00'. Note the
              colon to delimit hours and minutes. If you don't want this, use
              <a href="/api/timezone">timezone</a>

      - title: setISOTimezone
        description: "Sets the timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setISOTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.setISOTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: timezoneOffset
        description: "Gets or sets the timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timezoneOffset( )'
            returns: number
            version: 0.1
            description: |
              Gets the timezone offset. Timezone offset is the number of minutes 
              away from GMT, for example -60 is the equivalent of GMT+01:00

          - signature: '.timezoneOffset( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>number_timezoneOffset</var>. 
              <var>number_timezoneOffset</var> is the number of minutes away 
              from GMT, for example -60 is the equivalent of GMT+01:00

      - title: getTimezoneOffset
        description: "Gets timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimezoneOffset( )'
            returns: number
            version: 0.1
            description: |
              Gets the timezone offset. Timezone offset is the number of minutes 
              away from GMT, for example -60 is the equivalent of GMT+01:00


      - title: setTimezoneOffset
        description: "Sets the timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezoneOffset( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>number_timezoneOffset</var>. 
              <var>number_timezoneOffset</var> is the number of minutes away 
              from GMT, for example -60 is the equivalent of GMT+01:00

      - title: setTimezoneToLocale
        description: "Sets the timezone to the local environments timezone"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezoneToLocale( )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to the local environments timezone
      - title: isDST
        description: "Returns true if the date is within the local environments Daylight Savings period"
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isDST( )'
            returns: boolean
            version: 0.1
            description: |
              Returns true if the date is within the local environments 
              Daylight Savings period, and false if not

  - title: Instance Year Methods
    functions: 

      - title: century
        description: "Gets or sets the century"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.century( )'
            returns: number
            version: 0.1
            description: |
              Get the century

          - signature: '.century( number_century )'
            returns: this
            version: 0.1
            description: |
              Set the century to <var>number_century</var>

      - title: getCentury
        description: "Gets the century"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getCentury( )'
            returns: number
            version: 0.1
            description: |
              Get the century

      - title: setCentury
        description: "Sets the century"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setCentury( number_century )'
            returns: this
            version: 0.1
            description: |
              Set the century to <var>number_century</var>

      - title: addCentury
        description: "Increase the century"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addCentury( [number_century] )'
            returns: this
            version: 0.1
            description: |
              Increases the century by <var>number_century</var>. If 
              <var>number_century</var> is not present, it will default to 1

      - title: subCentury
        description: "Increase the century"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subCentury( [number_century] )'
            returns: this
            version: 0.1
            description: |
              Decreases the century by <var>number_century</var>. If 
              <var>number_century</var> is not present, it will default to 1

      - title: fullYear
        description: "Set or get the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.fullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit year, i.e 2012

          - signature: '.fullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit year to <var>number_year</var>

      - title: setFullYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit year to <var>number_year</var>

      - title: getFullYear
        description: "Get the full, 4 digit year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit year, i.e 2012

      - title: addFullYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subFullYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Decreases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: year
        description: "Set or get the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.year( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

          - signature: '.year( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit year to <var>number_year</var>

      - title: setYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit year to <var>number_year</var>

      - title: getYear
        description: "Get the full, 4 digit year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

      - title: addYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: UTCFullYear
        description: "Set or get the full, 4 digit UTC year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit UTC year, i.e 2012

          - signature: '.UTCFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit UTC year to <var>number_year</var>

      - title: setUTCFullYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit UTC year to <var>number_year</var>

      - title: getUTCFullYear
        description: "Get the full, 4 digit UTC year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit UTC year, i.e 2012

      - title: addUTCFullYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subUTCFullYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: UTCYear
        description: "Set or get the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit UTC year, i.e 12

          - signature: '.UTCYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit UTC year to <var>number_year</var>

      - title: setUTCYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit UTC year to <var>number_year</var>

      - title: getUTCYear
        description: "Get the 2 digit UTC year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

      - title: addUTCYear
        description: "Increase the UTC year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subUTCYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: isLeapYear
        description: "Determine if the set year is a leap year"
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isLeapYear( [number_leap_year] )'
            returns: boolean
            version: 0.1
            description: |
              If the <var>number_leap_year</var> is a leap year, then 
              <var>true</var> will be returned, otherwise <var>false</var> will
              be returned. If <var>number_leap_year</var> is not present, it 
              will default to <code>this.fullYear()</code>.ds</a>

  - title: Instance Month
    functions: 

      - title: month
        description: "Gets or sets the month"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.month( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index month (0 = Jan ... 11 = Dec)

          - signature: '.month( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: getMonth
        description: "Gets the month"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index month (0 = Jan ... 11 = Dec)

      - title: setMonth
        description: "Sets the month"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: addMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1

      - title: subMonth
        description: Subtract a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1

      - title: oneIndexedMonth
        description: "Gets or sets the month as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.oneIndexedMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the 1-index month (1 = Jan ... 12 = Dec)

          - signature: '.oneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the 1-index month to <var>number_month</var> (1 = Jan ... 12 = Dec)

      - title: getOneIndexedMonth
        description: "Gets the month as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getOneIndexedMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the 1-index month (1 = Jan ... 12 = Dec)

      - title: setOneIndexedMonth
        description: "Sets the month, as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the 1-index month to <var>number_month</var> (1 = Jan ... 12 = Dec)

      - title: addOneIndexedMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/addMonth">addMonth</a>.

      - title: subOneIndexedMonth
        description: Subtract a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set month. If
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/subMonth">subMonth</a>.

      - title: UTCMonth
        description: "Gets or sets the month as UTC"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index UTC month (0 = Jan ... 11 = Dec)

          - signature: '.UTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index UTC month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: getUTCMonth
        description: "Gets the month as UTC"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index UTC month (0 = Jan ... 11 = Dec)

      - title: setUTCMonth
        description: "Sets the month as UTC"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index UTC month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: addUTCMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set UTC month. If 
              <var>number_month</var> is not present, it will default to 1
              Similar to <a href="/api/addMonth">addMonth</a>.

      - title: subUTCMonth
        description: Subtract a number of UTC months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set UTC month. If 
              <var>number_month</var> is not present, it will default to 1
              Similar to <a href="/api/subMonth">subMonth</a>.

      - title: getFullMonthName
        description: Get the long month name (January - December)
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getFullMonthName( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the full month name. For example, if the month is 
              January (0), getMonthName will return 'January' in the default 
              culture (English).

      - title: getMonthName
        description: Get the abbreviated month name (Jan - Dec)
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getMonthName( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the month name, as the "abbreviated" version of 
              the month. For example, if the month is January (0), 
              getMonthName will return 'Jan' in the default culture (English).

  - title: Instance Week
    functions: 

      - title: week
        description: "Gets or sets the week"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.week( )'
            returns: number
            version: 0.1
            description: |
              Gets the week of the year (0 - 53)

          - signature: '.week( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Sets the date to the monday beginning the week of 
              <var>number_week</var>.

      - title: getWeek
        description: "Gets the week"
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.getWeek( )'
            returns: number
            version: 0.1
            description: |
              Gets the week of the year (0 - 53)

      - title: setWeek
        description: "Sets the week"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setWeek( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Sets the date to the monday beginning the week of 
              <var>number_week</var>.

      - title: addWeek
        description: Add a number of weeks from the week
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.addWeek( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_week</var> from the set week. If 
              <var>number_week</var> is not present, it will default to 1. It 
              will also reset the day to the Monday of the new week.

      - title: subWeek
        description: Subtract a number of weeks from the set week
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subWeek( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_week</var> from the set week. If 
              <var>number_week</var> is not present, it will default to 1. It 
              will also reset the day to the Monday of the new week.

      - title: getWeekOrdinal
        description: Get's the ordinal suffix of the set week
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getWeekOrdinal( )'
            returns: string
            version: 0.1
            description: |
                Gets the weeks ordinal suffix. In the default culture 
                (English), this means either "th", "st", or "rd" is returned. 
                For example, if <a href="/api/getWeek">getWeek()</a> returns 3,
                then getWeekOrdinal() will return "rd".

      - title: eachWeekOfMonth
        description: Iterate through every week in a month
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachWeekOfMonth( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first week of the month, and loop 
                through, incrimenting by 1 until the last week of the month, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_week, tempus_object_set_to_week]</var>. For more on
                iterators, see the <a href="/docs/method-type-rundown#iterators">
                iterators</a> documentation

      - title: eachWeekOfYear
        description: Iterate through every week in a year
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachWeekOfYear( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first week of the year, and loop 
                through, incrimenting by 1 until the last week of the year, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_week, tempus_object_set_to_week]</var>. For more on
                iterators, see the <a href="/docs/method-type-rundown#iterators">
                iterators</a> documentation

  - title: Instance Date Methods
    functions: 

      - title: date
        description: Gets or sets the date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.date( )'
            returns: number
            version: 0.1
            description: |
              Gets the date.

          - signature: '.date( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_date</var>

      - title: getDate
        description: Gets the date
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the date.

      - title: setDate
        description: Sets the date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_date</var>

      - title: addDate
        description: Adds a number of days to the set date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: addDate
        description: Subtracts a number of dasy to the set date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: UTCDate
        description: Gets or sets the UTC date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC date.

          - signature: '.UTCDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC date to <var>number_date</var>.

      - title: getUTCDate
        description: Gets the UTC date
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC date.

      - title: setUTCDate
        description: Sets the UTC date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC date to <var>number_date</var>.

      - title: addUTCDate
        description: Adds a number of days to the set UTC date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_date</var> from the set UTC date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: subUTCDate
        description: Subtracts a number of days to the set UTC date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: getDateOrdinal
        description: Get's the ordinal suffix of the set date
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getDateOrdinal( )'
            returns: string
            version: 0.1
            description: |
                Gets the set dates ordinal suffix. In the default culture 
                (English), this means either "th", "st", or "rd" is returned. 
                For example, if <a href="/api/getDate">getDate()</a> returns 3,
                then getDateOrdinal() will return "rd".

  - title: Instance Day Methods
    functions:

      - title: day
        description: Sets or gets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.day( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

          - signature: '.day( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: getDay
        description: Gets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: setDay
        description: Sets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setDay( number_day )'
            returns: this
            version: 0.2
            description: |
              Sets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: addDay
        description: Adds a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subDay
        description: Subtracts a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: ISODay
        description: Sets or gets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

          - signature: '.ISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: getISODay
        description: Gets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: setISODay
        description: Sets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: addISODay
        description: Adds a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addDay">addDay</a>

      - title: subISODay
        description: Subtracts a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addDay">addDay</a>

      - title: UTCDay
        description: Sets or gets the UTC day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

          - signature: '.UTCDay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: getUTCDay
        description: Gets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: setUTCDay
        description: Sets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCDay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: addUTCDay
        description: Adds a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subUTCDay
        description: Subtracts a number of UTC days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: UTCISODay
        description: Sets or gets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

          - signature: '.UTCISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: getUTCISODay
        description: Gets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: setUTCISODay
        description: Sets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: addUTCISODay
        description: Adds a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addUTCDay">addUTCDay</a>

      - title: subUTCISODay
        description: Subtracts a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addUTCDay">addUTCDay</a>

      - title: dayOfYear
        description: Gets or sets the day of the year (1 to 366)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.dayOfYear( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the year, as a number from 1 to 366.

          - signature: '.dayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the year to <var>number_day</var>, which 
              should be a number from 1 to 366.

      - title: getDayOfYear
        description: Gets the day of the year (1 to 366)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDayOfYear( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the year, as a number from 1 to 366.

      - title: setDayOfYear
        description: Sets the day of the year (1 to 366)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setDayOfYear( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the year to <var>number_day</var>, which 
              should be a number from 1 to 366.

      - title: addDayOfYear
        description: Adds a number of days to the set day of the year
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> to the set day of the year. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subDayOfYear
        description: Subtracts a number of days to the set day of the year
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> to the set day of the year. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: getLastDayOfMonth
        description: Gets the last day of the month (28 - 31)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getLastDayOfMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the last day of the month (28 - 31), for example, if the 
              month is February <code>.getLastDayOfMonth()</code> will return 
              <code>28</code>, for December: <code>31</code>.

      - title: getDayName
        description: Get the short day name ('Mon' to 'Sun') 
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getDayName( )'
            returns: string
            version: 0.1
            description: |
              Gets the name of the day, as a shortened version of the 
              day. For the English locale, this is a 3 letter representation of 
              the full day name, from 'Mon' to 'Sun'

      - title: getFullDayName
        description: Get the full day name ('Monday' to 'Sunday')
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getFullDayName( )'
            returns: this
            version: 0.1
            description: |
              Gets the name of the day, as the full version of the 
              day. For the English locale, this is from 'Monday' to 'Sunday'

      - title: eachDayOfWeek
        description: Iterate through every day in a week (Sun-Sat)
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachDayOfWeek( function_iterator )'
            returns: this
            version: 0.2
            description: |
              This will start with Sunday, and loop through each day, 
              incrimenting by 1 until the following Saturday, running 
              <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_day_of_week, tempus_object_set_to_day_of_week]</var>.
              For more on iterators, see the 
              <a href="/docs/method-type-rundown#iterators">iterators</a>
              documentation

      - title: eachISODayOfWeek
        description: Iterate through every ISO day in a week (Mon-Sun)
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachISODayOfWeek( function_iterator )'
            returns: this
            version: 0.2
            description: |
              This will start with Monday, and loop through each day, 
              incrimenting by 1 until the following Sunday, running 
              <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_day_of_week, tempus_object_set_to_day_of_week]</var>.
              For more on iterators, see the 
              <a href="/docs/method-type-rundown#iterators">iterators</a>
              documentation

      - title: eachDayOfMonth
        description: Iterate through every day in a month
        tags:
          - v0.1
        category: iterators
        signatures:
          - signature: '.eachDayOfMonth( function_iterator )'
            returns: this
            version: 0.1
            description: |
              This will start with the first day of the month, and loop 
              through, incrimenting by 1 until the last day of the month, 
              running <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_date, tempus_object_set_to_date]</var>. For more on
              iterators, see the <a href="/docs/method-type-rundown#iterators">
              iterators</a> documentation

      - title: eachDayOfYear
        description: Iterate through every day in a year
        tags:
          - v0.1
        category: iterators
        signatures:
          - signature: '.eachDayOfYear( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first day of the year, and loop 
                through, incrimenting by 1 until the last day of the year, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_day_of_year, tempus_object_set_to_day_of_year]</var>.
                For more on iterators, see the 
                <a href="/docs/method-type-rundown#iterators">iterators</a>
                documentation

  - title: Instance Time Methods
    functions: 

      - title: ampm
        description: "Gets or sets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.ampm( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as a lower case string, in the 
              default locale (English): either 'am' or 'pm'

          - signature: '.ampm( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'am' or 'pm'. The case is 
              insensitive.

      - title: getampm
        description: "Gets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getampm( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as a lower case string, in the 
              default locale (English): either 'am' or 'pm'

      - title: setampm
        description: "Sets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.setampm( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'am' or 'pm'. The case is 
              insensitive.

      - title: AMPM
        description: "Gets or sets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.AMPM( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as an upper case string, in the
              default locale (English): either 'AM' or 'PM'

          - signature: '.AMPM( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'AM' or 'PM'. The case is 
              insensitive.

      - title: getAMPM
        description: "Gets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.AMPM( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as an upper case string, in the
              default locale (English): either 'AM' or 'PM'

      - title: setAMPM
        description: "Sets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.AMPM( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'AM' or 'PM'. The case is 
              insensitive.

      - title: setTimeToNow
        description: Set the time to the current time
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimeToNow( )'
            returns: this
            version: 0.1
            description: |
              Sets the time to the current time.

      - title: clearTime
        description: Sets the time to 00:00:00
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.clearTime( )'
            returns: this
            version: 0.1
            description: |
              Sets the time to 00:00:00. This is the equivalent of 
              .[timeString](/api/timeString)('00:00:00')

      - title: timeString
        description: Get or set the time as a string representation of NN:NN:NN
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timeString( )'
            returns: string
            version: 0.1
            description: |
              Gets the time as a representation of NN:NN:NN, for example 
              '12:30:00' for half past 12, or '04:00:05' for 5 seconds past 4am

          - signature: '.timeString( string_time )'
            returns: string
            version: 0.1
            description: |
              Sets the time to <var>string_time</var>, which is a representation
              of NN:NN:NN, for example to set the time to half past 12, 
              <var>string_time</var> should be '12:30:00'.

  - title: Instance Hour Methods
    functions: 

      - title: hours
        description: Sets or gets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.hours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 0 to 23.

          - signature: '.hours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 0 to 23.

      - title: getHours
        description: Gets the hour of the day (0-23)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 0 to 23.

      - title: setHours
        description: Sets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 0 to 23.

      - title: addHours
        description: Adds a number of hours to the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1
              
      - title: subHours
        description: Subtracts a number of hours from the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1

      - title: UTCHours
        description: Sets or gets the UTC hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 0 to 23.

          - signature: '.UTCHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 0 to 23.

      - title: getUTCHours
        description: Gets the UTC hour of the day (0-23)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 0 to 23.

      - title: setUTCHours
        description: Sets or gets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 0 to 23.

      - title: addUTCHours
        description: Adds a number of hours to the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set UTC hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1
              
      - title: subUTCHours
        description: Subtracts a number of hours from the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1

      - title: ordinalHours
        description: Sets or gets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ordinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 1 to 12.

          - signature: '.ordinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 1 to 12.

      - title: getOrdinalHours
        description: Gets the hour of the day (1-12)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 1 to 12.

      - title: setOrdinalHours
        description: Sets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 1 to 12.

      - title: addOrdinalHours
        description: Adds a number of hours to the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addHours">addHours</a>
              
      - title: subOrdinalHours
        description: Subtracts a number of hours from the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addHours">subHours</a>

      - title: UTCOrdinalHours
        description: Sets or gets the UTC hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 1 to 12.

          - signature: '.UTCOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 1 to 12.

      - title: getUTCOrdinalHours
        description: Gets the UTC hour of the day (1-12)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 1 to 12.

      - title: setUTCOrdinalHours
        description: Sets or gets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 1 to 12.

      - title: addUTCOrdinalHours
        description: Adds a number of hours to the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set UTC hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addUTCHours">addUTCHours</a>
              
      - title: subUTCOrdinalHours
        description: Subtracts a number of hours from the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/subUTCHours">subUTCHours</a>

  - title: Instance Minute Methods
    functions:

      - title: minutes
        description: Get or set the minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.minutes( )'
            returns: number
            version: 0.1
            description: |
              Get minutes (0 to 59)

          - signature: '.minutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set minutes to <var>number_minutes</var>, which should be a number
              between 0 and 59

      - title: getMinutes
        description: Get the minutes (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get minutes (0 to 59)

      - title: setMinutes
        description: Set the minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set minutes to <var>number_minutes</var>, which should be a number
              between 0 and 59

      - title: addMinutes
        description: Adds a number of minutes to the set minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_minutes</var> to the set minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: subMinutes
        description: Subtracts a number of Minutess to the current Minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_minutes</var> to the set minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: UTCMinutes
        description: Get or set the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get the UTC minutes (0 to 59)

          - signature: '.UTCMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set the UTC minutes to <var>number_minutes</var>, which should be 
              a number between 0 and 59

      - title: getUTCMinutes
        description: Get the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get the UTC minutes (0 to 59)

      - title: setUTCMinutes
        description: Set the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set the UTC minutes to <var>number_minutes</var>, which should be 
              a number between 0 and 59

      - title: addUTCMinutes
        description: Adds a number of minutes to the set UTC minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_minutes</var> to the set UTC minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: subUTCMinutes
        description: Subtracts a number of minutes to the set UTC minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_minutes</var> to the set UTC minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.